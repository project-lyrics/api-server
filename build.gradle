import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.epages.restdocs-api-spec' version '0.18.4'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.project-lyrics'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation platform('io.awspring.cloud:spring-cloud-aws-dependencies:3.1.0')
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-secrets-manager'

    // API CLIENT
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:2023.0.1")
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // test
    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.4'
    swaggerUI 'org.webjars:swagger-ui:5.17.14'

    // csv
    implementation 'com.opencsv:opencsv:5.5.2'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // firebase cloud messaging
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // slack
    implementation 'com.slack.api:slack-api-client:1.12.0'

    // json
    implementation 'org.json:json:20210307'

    // Amazon OpenSearch
    implementation("org.opensearch.client:opensearch-rest-client:2.11.0")
    implementation("org.opensearch.client:opensearch-java:2.7.0")
    implementation("jakarta.json:jakarta.json-api")
}

swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}

openapi3 {
    servers = [
            { url = "http://api.feelinapp.com" },
            { url = "http://localhost:8080" }
    ]
    title = "API 문서"
    description = "Feelin API Docs"
    version = "0.0.2"
    format = "yaml"
}

tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
}

bootJar {
    dependsOn generateSwaggerUISample
    from("${generateSwaggerUISample.outputDir}") {
        into 'static/docs'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
