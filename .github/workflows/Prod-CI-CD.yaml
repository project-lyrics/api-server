name: Build Image & Push

on:
  push:
    branches:
      [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: cache gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: overwrite application.yml
        if: |
          contains(github.ref, 'main')
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.YML }}" > src/main/resources/application.yml
        shell: bash

      - name: set up redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: 6

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase-key.json"
          json: ${{ secrets.FIREBASE_KEY }}

      - name: Move firebase-key.json to src/main/resources
        run: |
          mkdir -p ./src/main/resources
          cp firebase-key.json ./src/main/resources/firebase-key.json
        shell: bash

      - name: build with gradle
        run: |
          ./gradlew bootjar

      - name: login into docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build docker image & push to docker hub
        if: contains(github.ref, 'main')
        run: |
          pwd
          docker build -f Dockerfile.prod --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/feelin-api:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/feelin-api:latest

      - name: send deploy file to main server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          source: ./scripts/deploy.sh
          target: /home/ubuntu/

      - name: send docker compose file to main server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          source: ./docker-compose.yml
          target: /home/ubuntu/

      - name: send firebase key file to main server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          source: firebase-key.json
          target: /home/ubuntu/

      - name: deploy to main server
        uses: appleboy/ssh-action@master
        id: deploy-main
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            sudo chmod 777 /home/ubuntu/scripts/deploy.sh
            /home/ubuntu/scripts/deploy.sh
            docker image prune -f
