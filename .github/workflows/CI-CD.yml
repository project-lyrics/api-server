name: Build Image & Push

on:
  push:
    branches:
      [ "dev" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          
      - name: cache gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: overwrite application.yml
        if: |
          contains(github.ref, 'dev')
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.YML }}" > src/main/resources/application.yml
        shell: bash

      - name: build with gradle
        run: |
          ./gradlew bootjar

      - name: login into docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build docker image & push to docker hub
        if: contains(github.ref, 'dev')
        run: |
          pwd
          docker build -f Dockerfile --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/feelin-api:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/feelin-api:latest

      - name: deploy to dev server
        uses: appleboy/ssh-action@master
        id: deploy-dev
        if: contains(github.ref, 'dev')
        with:
          host: ${{ secrets.HOST }} # EC2 퍼블릭 IPv4 DNS
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker ps -q --filter "name=feelin_container" -a | xargs sudo docker stop | xargs sudo docker rm
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/feelin-api
            sudo docker run -d --name feelin_container -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/feelin-api
            sudo docker image prune -f
